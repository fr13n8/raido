syntax = "proto3";

package service;

service RaidoService {
  rpc ProxyStart(ProxyStartRequest) returns (ProxyStartResponse) {}
  rpc ProxyStop(Empty) returns (Empty) {}

  rpc AgentList(Empty) returns (AgentListResponse) {}
  rpc AgentRemove(AgentRemoveRequest) returns (Empty) {}

  rpc TunnelList(Empty) returns (TunnelListResponse) {}
  rpc TunnelStart(TunnelStartRequest) returns (Empty) {}
  rpc TunnelStop(TunnelStopRequest) returns (Empty) {}
  rpc TunnelPause(TunnelPauseRequest) returns (Empty) {}
  rpc TunnelResume(TunnelResumeRequest) returns (Empty) {}
  rpc TunnelAddRoute(TunnelAddRouteRequest) returns (Empty) {}
  rpc TunnelRemoveRoute(TunnelRemoveRouteRequest) returns (Empty) {}
}

message Empty {}

message AgentRemoveRequest {
  string agent_id = 1;
}

message ProxyStartRequest {
  string proxy_address = 1;
}

message ProxyStartResponse {
  bytes cert_hash = 1;
}

message AgentListResponse {
  map<string, Agent> agents = 1;
}

message Agent {
  string name = 1;
  repeated string routes = 2;
}

message TunnelListResponse {
  repeated Tunnel tunnels = 1;
}

message Tunnel {
  string agent_id = 1;
  repeated string routes = 2;
  string status = 3;
  string interface = 4;
  string loopback = 5;
}

message TunnelStartRequest {
  string agent_id = 1;
  repeated string routes = 2;
}

message TunnelStopRequest {
  string agent_id = 1;
}

message TunnelPauseRequest {
  string agent_id = 1;
}

message TunnelResumeRequest {
  string agent_id = 1;
}

message TunnelAddRouteRequest {
  string agent_id = 1;
  repeated string routes = 2;
}

message TunnelRemoveRouteRequest {
  string agent_id = 1;
  repeated string routes = 2;
}